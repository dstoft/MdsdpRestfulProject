/**
 * generated by Xtext 2.24.0
 */
package sdu.mdsd.restful.restControllerGeneration.util;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.notify.impl.AdapterFactoryImpl;

import org.eclipse.emf.ecore.EObject;

import sdu.mdsd.restful.restControllerGeneration.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Adapter Factory</b> for the model.
 * It provides an adapter <code>createXXX</code> method for each class of the model.
 * <!-- end-user-doc -->
 * @see sdu.mdsd.restful.restControllerGeneration.RestControllerGenerationPackage
 * @generated
 */
public class RestControllerGenerationAdapterFactory extends AdapterFactoryImpl
{
  /**
   * The cached model package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static RestControllerGenerationPackage modelPackage;

  /**
   * Creates an instance of the adapter factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RestControllerGenerationAdapterFactory()
  {
    if (modelPackage == null)
    {
      modelPackage = RestControllerGenerationPackage.eINSTANCE;
    }
  }

  /**
   * Returns whether this factory is applicable for the type of the object.
   * <!-- begin-user-doc -->
   * This implementation returns <code>true</code> if the object is either the model's package or is an instance object of the model.
   * <!-- end-user-doc -->
   * @return whether this factory is applicable for the type of the object.
   * @generated
   */
  @Override
  public boolean isFactoryForType(Object object)
  {
    if (object == modelPackage)
    {
      return true;
    }
    if (object instanceof EObject)
    {
      return ((EObject)object).eClass().getEPackage() == modelPackage;
    }
    return false;
  }

  /**
   * The switch that delegates to the <code>createXXX</code> methods.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RestControllerGenerationSwitch<Adapter> modelSwitch =
    new RestControllerGenerationSwitch<Adapter>()
    {
      @Override
      public Adapter caseEntityModel(EntityModel object)
      {
        return createEntityModelAdapter();
      }
      @Override
      public Adapter caseDeclaration(Declaration object)
      {
        return createDeclarationAdapter();
      }
      @Override
      public Adapter caseType(Type object)
      {
        return createTypeAdapter();
      }
      @Override
      public Adapter caseExternalDef(ExternalDef object)
      {
        return createExternalDefAdapter();
      }
      @Override
      public Adapter caseEntity(Entity object)
      {
        return createEntityAdapter();
      }
      @Override
      public Adapter caseAttribute(Attribute object)
      {
        return createAttributeAdapter();
      }
      @Override
      public Adapter caseAttributeRequirement(AttributeRequirement object)
      {
        return createAttributeRequirementAdapter();
      }
      @Override
      public Adapter caseExternalUse(ExternalUse object)
      {
        return createExternalUseAdapter();
      }
      @Override
      public Adapter caseProposition(Proposition object)
      {
        return createPropositionAdapter();
      }
      @Override
      public Adapter caseComparison(Comparison object)
      {
        return createComparisonAdapter();
      }
      @Override
      public Adapter caseRelationalOp(RelationalOp object)
      {
        return createRelationalOpAdapter();
      }
      @Override
      public Adapter caseExpression(Expression object)
      {
        return createExpressionAdapter();
      }
      @Override
      public Adapter caseName(Name object)
      {
        return createNameAdapter();
      }
      @Override
      public Adapter caseIntExp(IntExp object)
      {
        return createIntExpAdapter();
      }
      @Override
      public Adapter caseController(Controller object)
      {
        return createControllerAdapter();
      }
      @Override
      public Adapter caseMethodDef(MethodDef object)
      {
        return createMethodDefAdapter();
      }
      @Override
      public Adapter caseMethodType(MethodType object)
      {
        return createMethodTypeAdapter();
      }
      @Override
      public Adapter caseCreateMethod(CreateMethod object)
      {
        return createCreateMethodAdapter();
      }
      @Override
      public Adapter caseCreateMethodWith(CreateMethodWith object)
      {
        return createCreateMethodWithAdapter();
      }
      @Override
      public Adapter caseCreateMethodExclude(CreateMethodExclude object)
      {
        return createCreateMethodExcludeAdapter();
      }
      @Override
      public Adapter caseGetMethod(GetMethod object)
      {
        return createGetMethodAdapter();
      }
      @Override
      public Adapter caseListMethod(ListMethod object)
      {
        return createListMethodAdapter();
      }
      @Override
      public Adapter caseUpdateMethod(UpdateMethod object)
      {
        return createUpdateMethodAdapter();
      }
      @Override
      public Adapter caseDeleteMethod(DeleteMethod object)
      {
        return createDeleteMethodAdapter();
      }
      @Override
      public Adapter caseDisjunction(Disjunction object)
      {
        return createDisjunctionAdapter();
      }
      @Override
      public Adapter caseConjunction(Conjunction object)
      {
        return createConjunctionAdapter();
      }
      @Override
      public Adapter caseRelEQ(RelEQ object)
      {
        return createRelEQAdapter();
      }
      @Override
      public Adapter caseRelLT(RelLT object)
      {
        return createRelLTAdapter();
      }
      @Override
      public Adapter caseRelGT(RelGT object)
      {
        return createRelGTAdapter();
      }
      @Override
      public Adapter caseRelLTE(RelLTE object)
      {
        return createRelLTEAdapter();
      }
      @Override
      public Adapter caseRelGTE(RelGTE object)
      {
        return createRelGTEAdapter();
      }
      @Override
      public Adapter caseAdd(Add object)
      {
        return createAddAdapter();
      }
      @Override
      public Adapter caseSub(Sub object)
      {
        return createSubAdapter();
      }
      @Override
      public Adapter caseMul(Mul object)
      {
        return createMulAdapter();
      }
      @Override
      public Adapter caseDiv(Div object)
      {
        return createDivAdapter();
      }
      @Override
      public Adapter defaultCase(EObject object)
      {
        return createEObjectAdapter();
      }
    };

  /**
   * Creates an adapter for the <code>target</code>.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param target the object to adapt.
   * @return the adapter for the <code>target</code>.
   * @generated
   */
  @Override
  public Adapter createAdapter(Notifier target)
  {
    return modelSwitch.doSwitch((EObject)target);
  }


  /**
   * Creates a new adapter for an object of class '{@link sdu.mdsd.restful.restControllerGeneration.EntityModel <em>Entity Model</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see sdu.mdsd.restful.restControllerGeneration.EntityModel
   * @generated
   */
  public Adapter createEntityModelAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link sdu.mdsd.restful.restControllerGeneration.Declaration <em>Declaration</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see sdu.mdsd.restful.restControllerGeneration.Declaration
   * @generated
   */
  public Adapter createDeclarationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link sdu.mdsd.restful.restControllerGeneration.Type <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see sdu.mdsd.restful.restControllerGeneration.Type
   * @generated
   */
  public Adapter createTypeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link sdu.mdsd.restful.restControllerGeneration.ExternalDef <em>External Def</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see sdu.mdsd.restful.restControllerGeneration.ExternalDef
   * @generated
   */
  public Adapter createExternalDefAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link sdu.mdsd.restful.restControllerGeneration.Entity <em>Entity</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see sdu.mdsd.restful.restControllerGeneration.Entity
   * @generated
   */
  public Adapter createEntityAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link sdu.mdsd.restful.restControllerGeneration.Attribute <em>Attribute</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see sdu.mdsd.restful.restControllerGeneration.Attribute
   * @generated
   */
  public Adapter createAttributeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link sdu.mdsd.restful.restControllerGeneration.AttributeRequirement <em>Attribute Requirement</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see sdu.mdsd.restful.restControllerGeneration.AttributeRequirement
   * @generated
   */
  public Adapter createAttributeRequirementAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link sdu.mdsd.restful.restControllerGeneration.ExternalUse <em>External Use</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see sdu.mdsd.restful.restControllerGeneration.ExternalUse
   * @generated
   */
  public Adapter createExternalUseAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link sdu.mdsd.restful.restControllerGeneration.Proposition <em>Proposition</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see sdu.mdsd.restful.restControllerGeneration.Proposition
   * @generated
   */
  public Adapter createPropositionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link sdu.mdsd.restful.restControllerGeneration.Comparison <em>Comparison</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see sdu.mdsd.restful.restControllerGeneration.Comparison
   * @generated
   */
  public Adapter createComparisonAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link sdu.mdsd.restful.restControllerGeneration.RelationalOp <em>Relational Op</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see sdu.mdsd.restful.restControllerGeneration.RelationalOp
   * @generated
   */
  public Adapter createRelationalOpAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link sdu.mdsd.restful.restControllerGeneration.Expression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see sdu.mdsd.restful.restControllerGeneration.Expression
   * @generated
   */
  public Adapter createExpressionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link sdu.mdsd.restful.restControllerGeneration.Name <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see sdu.mdsd.restful.restControllerGeneration.Name
   * @generated
   */
  public Adapter createNameAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link sdu.mdsd.restful.restControllerGeneration.IntExp <em>Int Exp</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see sdu.mdsd.restful.restControllerGeneration.IntExp
   * @generated
   */
  public Adapter createIntExpAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link sdu.mdsd.restful.restControllerGeneration.Controller <em>Controller</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see sdu.mdsd.restful.restControllerGeneration.Controller
   * @generated
   */
  public Adapter createControllerAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link sdu.mdsd.restful.restControllerGeneration.MethodDef <em>Method Def</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see sdu.mdsd.restful.restControllerGeneration.MethodDef
   * @generated
   */
  public Adapter createMethodDefAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link sdu.mdsd.restful.restControllerGeneration.MethodType <em>Method Type</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see sdu.mdsd.restful.restControllerGeneration.MethodType
   * @generated
   */
  public Adapter createMethodTypeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link sdu.mdsd.restful.restControllerGeneration.CreateMethod <em>Create Method</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see sdu.mdsd.restful.restControllerGeneration.CreateMethod
   * @generated
   */
  public Adapter createCreateMethodAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link sdu.mdsd.restful.restControllerGeneration.CreateMethodWith <em>Create Method With</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see sdu.mdsd.restful.restControllerGeneration.CreateMethodWith
   * @generated
   */
  public Adapter createCreateMethodWithAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link sdu.mdsd.restful.restControllerGeneration.CreateMethodExclude <em>Create Method Exclude</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see sdu.mdsd.restful.restControllerGeneration.CreateMethodExclude
   * @generated
   */
  public Adapter createCreateMethodExcludeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link sdu.mdsd.restful.restControllerGeneration.GetMethod <em>Get Method</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see sdu.mdsd.restful.restControllerGeneration.GetMethod
   * @generated
   */
  public Adapter createGetMethodAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link sdu.mdsd.restful.restControllerGeneration.ListMethod <em>List Method</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see sdu.mdsd.restful.restControllerGeneration.ListMethod
   * @generated
   */
  public Adapter createListMethodAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link sdu.mdsd.restful.restControllerGeneration.UpdateMethod <em>Update Method</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see sdu.mdsd.restful.restControllerGeneration.UpdateMethod
   * @generated
   */
  public Adapter createUpdateMethodAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link sdu.mdsd.restful.restControllerGeneration.DeleteMethod <em>Delete Method</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see sdu.mdsd.restful.restControllerGeneration.DeleteMethod
   * @generated
   */
  public Adapter createDeleteMethodAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link sdu.mdsd.restful.restControllerGeneration.Disjunction <em>Disjunction</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see sdu.mdsd.restful.restControllerGeneration.Disjunction
   * @generated
   */
  public Adapter createDisjunctionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link sdu.mdsd.restful.restControllerGeneration.Conjunction <em>Conjunction</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see sdu.mdsd.restful.restControllerGeneration.Conjunction
   * @generated
   */
  public Adapter createConjunctionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link sdu.mdsd.restful.restControllerGeneration.RelEQ <em>Rel EQ</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see sdu.mdsd.restful.restControllerGeneration.RelEQ
   * @generated
   */
  public Adapter createRelEQAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link sdu.mdsd.restful.restControllerGeneration.RelLT <em>Rel LT</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see sdu.mdsd.restful.restControllerGeneration.RelLT
   * @generated
   */
  public Adapter createRelLTAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link sdu.mdsd.restful.restControllerGeneration.RelGT <em>Rel GT</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see sdu.mdsd.restful.restControllerGeneration.RelGT
   * @generated
   */
  public Adapter createRelGTAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link sdu.mdsd.restful.restControllerGeneration.RelLTE <em>Rel LTE</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see sdu.mdsd.restful.restControllerGeneration.RelLTE
   * @generated
   */
  public Adapter createRelLTEAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link sdu.mdsd.restful.restControllerGeneration.RelGTE <em>Rel GTE</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see sdu.mdsd.restful.restControllerGeneration.RelGTE
   * @generated
   */
  public Adapter createRelGTEAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link sdu.mdsd.restful.restControllerGeneration.Add <em>Add</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see sdu.mdsd.restful.restControllerGeneration.Add
   * @generated
   */
  public Adapter createAddAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link sdu.mdsd.restful.restControllerGeneration.Sub <em>Sub</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see sdu.mdsd.restful.restControllerGeneration.Sub
   * @generated
   */
  public Adapter createSubAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link sdu.mdsd.restful.restControllerGeneration.Mul <em>Mul</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see sdu.mdsd.restful.restControllerGeneration.Mul
   * @generated
   */
  public Adapter createMulAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link sdu.mdsd.restful.restControllerGeneration.Div <em>Div</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see sdu.mdsd.restful.restControllerGeneration.Div
   * @generated
   */
  public Adapter createDivAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for the default case.
   * <!-- begin-user-doc -->
   * This default implementation returns null.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @generated
   */
  public Adapter createEObjectAdapter()
  {
    return null;
  }

} //RestControllerGenerationAdapterFactory
