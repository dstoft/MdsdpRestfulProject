/*
 * generated by Xtext 2.24.0
 */
grammar InternalRestControllerGeneration;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package sdu.mdsd.restful.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package sdu.mdsd.restful.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import sdu.mdsd.restful.services.RestControllerGenerationGrammarAccess;

}
@parser::members {
	private RestControllerGenerationGrammarAccess grammarAccess;

	public void setGrammarAccess(RestControllerGenerationGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleEntityModel
entryRuleEntityModel
:
{ before(grammarAccess.getEntityModelRule()); }
	 ruleEntityModel
{ after(grammarAccess.getEntityModelRule()); } 
	 EOF 
;

// Rule EntityModel
ruleEntityModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntityModelAccess().getDeclarationsAssignment()); }
		(rule__EntityModel__DeclarationsAssignment)*
		{ after(grammarAccess.getEntityModelAccess().getDeclarationsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeclaration
entryRuleDeclaration
:
{ before(grammarAccess.getDeclarationRule()); }
	 ruleDeclaration
{ after(grammarAccess.getDeclarationRule()); } 
	 EOF 
;

// Rule Declaration
ruleDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclarationAccess().getAlternatives()); }
		(rule__Declaration__Alternatives)
		{ after(grammarAccess.getDeclarationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getGroup()); }
		(rule__Type__Group__0)
		{ after(grammarAccess.getTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntity
entryRuleEntity
:
{ before(grammarAccess.getEntityRule()); }
	 ruleEntity
{ after(grammarAccess.getEntityRule()); } 
	 EOF 
;

// Rule Entity
ruleEntity 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntityAccess().getGroup()); }
		(rule__Entity__Group__0)
		{ after(grammarAccess.getEntityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttribute
entryRuleAttribute
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeAccess().getGroup()); }
		(rule__Attribute__Group__0)
		{ after(grammarAccess.getAttributeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttributeRequirement
entryRuleAttributeRequirement
:
{ before(grammarAccess.getAttributeRequirementRule()); }
	 ruleAttributeRequirement
{ after(grammarAccess.getAttributeRequirementRule()); } 
	 EOF 
;

// Rule AttributeRequirement
ruleAttributeRequirement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeRequirementAccess().getGroup()); }
		(rule__AttributeRequirement__Group__0)
		{ after(grammarAccess.getAttributeRequirementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExternalFunction
entryRuleExternalFunction
:
{ before(grammarAccess.getExternalFunctionRule()); }
	 ruleExternalFunction
{ after(grammarAccess.getExternalFunctionRule()); } 
	 EOF 
;

// Rule ExternalFunction
ruleExternalFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExternalFunctionAccess().getGroup()); }
		(rule__ExternalFunction__Group__0)
		{ after(grammarAccess.getExternalFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogicExp
entryRuleLogicExp
:
{ before(grammarAccess.getLogicExpRule()); }
	 ruleLogicExp
{ after(grammarAccess.getLogicExpRule()); } 
	 EOF 
;

// Rule LogicExp
ruleLogicExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicExpAccess().getGroup()); }
		(rule__LogicExp__Group__0)
		{ after(grammarAccess.getLogicExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConjunction
entryRuleConjunction
:
{ before(grammarAccess.getConjunctionRule()); }
	 ruleConjunction
{ after(grammarAccess.getConjunctionRule()); } 
	 EOF 
;

// Rule Conjunction
ruleConjunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConjunctionAccess().getGroup()); }
		(rule__Conjunction__Group__0)
		{ after(grammarAccess.getConjunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparison
entryRuleComparison
:
{ before(grammarAccess.getComparisonRule()); }
	 ruleComparison
{ after(grammarAccess.getComparisonRule()); } 
	 EOF 
;

// Rule Comparison
ruleComparison 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparisonAccess().getGroup()); }
		(rule__Comparison__Group__0)
		{ after(grammarAccess.getComparisonAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelationalOp
entryRuleRelationalOp
:
{ before(grammarAccess.getRelationalOpRule()); }
	 ruleRelationalOp
{ after(grammarAccess.getRelationalOpRule()); } 
	 EOF 
;

// Rule RelationalOp
ruleRelationalOp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationalOpAccess().getAlternatives()); }
		(rule__RelationalOp__Alternatives)
		{ after(grammarAccess.getRelationalOpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExp
entryRuleExp
:
{ before(grammarAccess.getExpRule()); }
	 ruleExp
{ after(grammarAccess.getExpRule()); } 
	 EOF 
;

// Rule Exp
ruleExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpAccess().getGroup()); }
		(rule__Exp__Group__0)
		{ after(grammarAccess.getExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFactor
entryRuleFactor
:
{ before(grammarAccess.getFactorRule()); }
	 ruleFactor
{ after(grammarAccess.getFactorRule()); } 
	 EOF 
;

// Rule Factor
ruleFactor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFactorAccess().getGroup()); }
		(rule__Factor__Group__0)
		{ after(grammarAccess.getFactorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimitive
entryRulePrimitive
:
{ before(grammarAccess.getPrimitiveRule()); }
	 rulePrimitive
{ after(grammarAccess.getPrimitiveRule()); } 
	 EOF 
;

// Rule Primitive
rulePrimitive 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimitiveAccess().getAlternatives()); }
		(rule__Primitive__Alternatives)
		{ after(grammarAccess.getPrimitiveAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleName
entryRuleName
:
{ before(grammarAccess.getNameRule()); }
	 ruleName
{ after(grammarAccess.getNameRule()); } 
	 EOF 
;

// Rule Name
ruleName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNameAccess().getVarNameAssignment()); }
		(rule__Name__VarNameAssignment)
		{ after(grammarAccess.getNameAccess().getVarNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntExp
entryRuleIntExp
:
{ before(grammarAccess.getIntExpRule()); }
	 ruleIntExp
{ after(grammarAccess.getIntExpRule()); } 
	 EOF 
;

// Rule IntExp
ruleIntExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntExpAccess().getValueAssignment()); }
		(rule__IntExp__ValueAssignment)
		{ after(grammarAccess.getIntExpAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleController
entryRuleController
:
{ before(grammarAccess.getControllerRule()); }
	 ruleController
{ after(grammarAccess.getControllerRule()); } 
	 EOF 
;

// Rule Controller
ruleController 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getControllerAccess().getGroup()); }
		(rule__Controller__Group__0)
		{ after(grammarAccess.getControllerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMethodDef
entryRuleMethodDef
:
{ before(grammarAccess.getMethodDefRule()); }
	 ruleMethodDef
{ after(grammarAccess.getMethodDefRule()); } 
	 EOF 
;

// Rule MethodDef
ruleMethodDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodDefAccess().getMethodTypeParserRuleCall()); }
		ruleMethodType
		{ after(grammarAccess.getMethodDefAccess().getMethodTypeParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMethodType
entryRuleMethodType
:
{ before(grammarAccess.getMethodTypeRule()); }
	 ruleMethodType
{ after(grammarAccess.getMethodTypeRule()); } 
	 EOF 
;

// Rule MethodType
ruleMethodType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodTypeAccess().getAlternatives()); }
		(rule__MethodType__Alternatives)
		{ after(grammarAccess.getMethodTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCreateMethod
entryRuleCreateMethod
:
{ before(grammarAccess.getCreateMethodRule()); }
	 ruleCreateMethod
{ after(grammarAccess.getCreateMethodRule()); } 
	 EOF 
;

// Rule CreateMethod
ruleCreateMethod 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCreateMethodAccess().getGroup()); }
		(rule__CreateMethod__Group__0)
		{ after(grammarAccess.getCreateMethodAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCreateMethodWith
entryRuleCreateMethodWith
:
{ before(grammarAccess.getCreateMethodWithRule()); }
	 ruleCreateMethodWith
{ after(grammarAccess.getCreateMethodWithRule()); } 
	 EOF 
;

// Rule CreateMethodWith
ruleCreateMethodWith 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCreateMethodWithAccess().getGroup()); }
		(rule__CreateMethodWith__Group__0)
		{ after(grammarAccess.getCreateMethodWithAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCreateMethodExclude
entryRuleCreateMethodExclude
:
{ before(grammarAccess.getCreateMethodExcludeRule()); }
	 ruleCreateMethodExclude
{ after(grammarAccess.getCreateMethodExcludeRule()); } 
	 EOF 
;

// Rule CreateMethodExclude
ruleCreateMethodExclude 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCreateMethodExcludeAccess().getGroup()); }
		(rule__CreateMethodExclude__Group__0)
		{ after(grammarAccess.getCreateMethodExcludeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGetMethod
entryRuleGetMethod
:
{ before(grammarAccess.getGetMethodRule()); }
	 ruleGetMethod
{ after(grammarAccess.getGetMethodRule()); } 
	 EOF 
;

// Rule GetMethod
ruleGetMethod 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGetMethodAccess().getGroup()); }
		(rule__GetMethod__Group__0)
		{ after(grammarAccess.getGetMethodAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleListMethod
entryRuleListMethod
:
{ before(grammarAccess.getListMethodRule()); }
	 ruleListMethod
{ after(grammarAccess.getListMethodRule()); } 
	 EOF 
;

// Rule ListMethod
ruleListMethod 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getListMethodAccess().getGroup()); }
		(rule__ListMethod__Group__0)
		{ after(grammarAccess.getListMethodAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUpdateMethod
entryRuleUpdateMethod
:
{ before(grammarAccess.getUpdateMethodRule()); }
	 ruleUpdateMethod
{ after(grammarAccess.getUpdateMethodRule()); } 
	 EOF 
;

// Rule UpdateMethod
ruleUpdateMethod 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUpdateMethodAccess().getGroup()); }
		(rule__UpdateMethod__Group__0)
		{ after(grammarAccess.getUpdateMethodAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeleteMethod
entryRuleDeleteMethod
:
{ before(grammarAccess.getDeleteMethodRule()); }
	 ruleDeleteMethod
{ after(grammarAccess.getDeleteMethodRule()); } 
	 EOF 
;

// Rule DeleteMethod
ruleDeleteMethod 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeleteMethodAccess().getGroup()); }
		(rule__DeleteMethod__Group__0)
		{ after(grammarAccess.getDeleteMethodAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationAccess().getTypeParserRuleCall_0()); }
		ruleType
		{ after(grammarAccess.getDeclarationAccess().getTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDeclarationAccess().getEntityParserRuleCall_1()); }
		ruleEntity
		{ after(grammarAccess.getDeclarationAccess().getEntityParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getDeclarationAccess().getControllerParserRuleCall_2()); }
		ruleController
		{ after(grammarAccess.getDeclarationAccess().getControllerParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__RequirementAlternatives_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getRequirementAttributeRequirementParserRuleCall_3_0_0()); }
		ruleAttributeRequirement
		{ after(grammarAccess.getAttributeAccess().getRequirementAttributeRequirementParserRuleCall_3_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeAccess().getRequirementExternalFunctionParserRuleCall_3_0_1()); }
		ruleExternalFunction
		{ after(grammarAccess.getAttributeAccess().getRequirementExternalFunctionParserRuleCall_3_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalOp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalOpAccess().getGroup_0()); }
		(rule__RelationalOp__Group_0__0)
		{ after(grammarAccess.getRelationalOpAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalOpAccess().getGroup_1()); }
		(rule__RelationalOp__Group_1__0)
		{ after(grammarAccess.getRelationalOpAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalOpAccess().getGroup_2()); }
		(rule__RelationalOp__Group_2__0)
		{ after(grammarAccess.getRelationalOpAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalOpAccess().getGroup_3()); }
		(rule__RelationalOp__Group_3__0)
		{ after(grammarAccess.getRelationalOpAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalOpAccess().getGroup_4()); }
		(rule__RelationalOp__Group_4__0)
		{ after(grammarAccess.getRelationalOpAccess().getGroup_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpAccess().getGroup_1_0_0()); }
		(rule__Exp__Group_1_0_0__0)
		{ after(grammarAccess.getExpAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpAccess().getGroup_1_0_1()); }
		(rule__Exp__Group_1_0_1__0)
		{ after(grammarAccess.getExpAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactorAccess().getGroup_1_0_0()); }
		(rule__Factor__Group_1_0_0__0)
		{ after(grammarAccess.getFactorAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getFactorAccess().getGroup_1_0_1()); }
		(rule__Factor__Group_1_0_1__0)
		{ after(grammarAccess.getFactorAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveAccess().getNameParserRuleCall_0()); }
		ruleName
		{ after(grammarAccess.getPrimitiveAccess().getNameParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveAccess().getIntExpParserRuleCall_1()); }
		ruleIntExp
		{ after(grammarAccess.getPrimitiveAccess().getIntExpParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveAccess().getGroup_2()); }
		(rule__Primitive__Group_2__0)
		{ after(grammarAccess.getPrimitiveAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodTypeAccess().getCreateMethodParserRuleCall_0()); }
		ruleCreateMethod
		{ after(grammarAccess.getMethodTypeAccess().getCreateMethodParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getMethodTypeAccess().getGetMethodParserRuleCall_1()); }
		ruleGetMethod
		{ after(grammarAccess.getMethodTypeAccess().getGetMethodParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getMethodTypeAccess().getListMethodParserRuleCall_2()); }
		ruleListMethod
		{ after(grammarAccess.getMethodTypeAccess().getListMethodParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getMethodTypeAccess().getUpdateMethodParserRuleCall_3()); }
		ruleUpdateMethod
		{ after(grammarAccess.getMethodTypeAccess().getUpdateMethodParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getMethodTypeAccess().getDeleteMethodParserRuleCall_4()); }
		ruleDeleteMethod
		{ after(grammarAccess.getMethodTypeAccess().getDeleteMethodParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group__0__Impl
	rule__Type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getTypeKeyword_0()); }
	'type'
	{ after(grammarAccess.getTypeAccess().getTypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getNameAssignment_1()); }
	(rule__Type__NameAssignment_1)
	{ after(grammarAccess.getTypeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__0__Impl
	rule__Entity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getEntityKeyword_0()); }
	'entity'
	{ after(grammarAccess.getEntityAccess().getEntityKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__1__Impl
	rule__Entity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getNameAssignment_1()); }
	(rule__Entity__NameAssignment_1)
	{ after(grammarAccess.getEntityAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__2__Impl
	rule__Entity__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getGroup_2()); }
	(rule__Entity__Group_2__0)?
	{ after(grammarAccess.getEntityAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__3__Impl
	rule__Entity__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__4__Impl
	rule__Entity__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getAttributesAssignment_4()); }
	(rule__Entity__AttributesAssignment_4)*
	{ after(grammarAccess.getEntityAccess().getAttributesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group_2__0__Impl
	rule__Entity__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getColonKeyword_2_0()); }
	':'
	{ after(grammarAccess.getEntityAccess().getColonKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getSuperAssignment_2_1()); }
	(rule__Entity__SuperAssignment_2_1)
	{ after(grammarAccess.getEntityAccess().getSuperAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__0__Impl
	rule__Attribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getNameAssignment_0()); }
	(rule__Attribute__NameAssignment_0)
	{ after(grammarAccess.getAttributeAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__1__Impl
	rule__Attribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getAttributeAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__2__Impl
	rule__Attribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getTypeAssignment_2()); }
	(rule__Attribute__TypeAssignment_2)
	{ after(grammarAccess.getAttributeAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getRequirementAssignment_3()); }
	(rule__Attribute__RequirementAssignment_3)?
	{ after(grammarAccess.getAttributeAccess().getRequirementAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeRequirement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeRequirement__Group__0__Impl
	rule__AttributeRequirement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeRequirement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeRequirementAccess().getRequireKeyword_0()); }
	'require'
	{ after(grammarAccess.getAttributeRequirementAccess().getRequireKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeRequirement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeRequirement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeRequirement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeRequirementAccess().getLogicAssignment_1()); }
	(rule__AttributeRequirement__LogicAssignment_1)
	{ after(grammarAccess.getAttributeRequirementAccess().getLogicAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalFunction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalFunction__Group__0__Impl
	rule__ExternalFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalFunction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalFunctionAccess().getExternalKeyword_0()); }
	'external'
	{ after(grammarAccess.getExternalFunctionAccess().getExternalKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalFunction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalFunction__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalFunction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalFunctionAccess().getExternalFuncAssignment_1()); }
	(rule__ExternalFunction__ExternalFuncAssignment_1)
	{ after(grammarAccess.getExternalFunctionAccess().getExternalFuncAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicExp__Group__0__Impl
	rule__LogicExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicExpAccess().getConjunctionParserRuleCall_0()); }
	ruleConjunction
	{ after(grammarAccess.getLogicExpAccess().getConjunctionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicExpAccess().getGroup_1()); }
	(rule__LogicExp__Group_1__0)*
	{ after(grammarAccess.getLogicExpAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicExp__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicExp__Group_1__0__Impl
	rule__LogicExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicExpAccess().getVerticalLineVerticalLineKeyword_1_0()); }
	'||'
	{ after(grammarAccess.getLogicExpAccess().getVerticalLineVerticalLineKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicExp__Group_1__1__Impl
	rule__LogicExp__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicExpAccess().getDisjunctionLeftAction_1_1()); }
	()
	{ after(grammarAccess.getLogicExpAccess().getDisjunctionLeftAction_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicExp__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicExpAccess().getRightAssignment_1_2()); }
	(rule__LogicExp__RightAssignment_1_2)
	{ after(grammarAccess.getLogicExpAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Conjunction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conjunction__Group__0__Impl
	rule__Conjunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjunction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConjunctionAccess().getComparisonParserRuleCall_0()); }
	ruleComparison
	{ after(grammarAccess.getConjunctionAccess().getComparisonParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjunction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conjunction__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjunction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConjunctionAccess().getGroup_1()); }
	(rule__Conjunction__Group_1__0)*
	{ after(grammarAccess.getConjunctionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Conjunction__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conjunction__Group_1__0__Impl
	rule__Conjunction__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjunction__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConjunctionAccess().getAmpersandAmpersandKeyword_1_0()); }
	'&&'
	{ after(grammarAccess.getConjunctionAccess().getAmpersandAmpersandKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjunction__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conjunction__Group_1__1__Impl
	rule__Conjunction__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjunction__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConjunctionAccess().getConjunctionLeftAction_1_1()); }
	()
	{ after(grammarAccess.getConjunctionAccess().getConjunctionLeftAction_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjunction__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conjunction__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjunction__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConjunctionAccess().getRightAssignment_1_2()); }
	(rule__Conjunction__RightAssignment_1_2)
	{ after(grammarAccess.getConjunctionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group__0__Impl
	rule__Comparison__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getLeftAssignment_0()); }
	(rule__Comparison__LeftAssignment_0)
	{ after(grammarAccess.getComparisonAccess().getLeftAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group__1__Impl
	rule__Comparison__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getOpAssignment_1()); }
	(rule__Comparison__OpAssignment_1)
	{ after(grammarAccess.getComparisonAccess().getOpAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getRightAssignment_2()); }
	(rule__Comparison__RightAssignment_2)
	{ after(grammarAccess.getComparisonAccess().getRightAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalOp__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalOp__Group_0__0__Impl
	rule__RelationalOp__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalOp__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalOpAccess().getRelEQAction_0_0()); }
	()
	{ after(grammarAccess.getRelationalOpAccess().getRelEQAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalOp__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalOp__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalOp__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalOpAccess().getEqualsSignKeyword_0_1()); }
	'='
	{ after(grammarAccess.getRelationalOpAccess().getEqualsSignKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalOp__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalOp__Group_1__0__Impl
	rule__RelationalOp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalOp__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalOpAccess().getRelLTAction_1_0()); }
	()
	{ after(grammarAccess.getRelationalOpAccess().getRelLTAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalOp__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalOp__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalOp__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalOpAccess().getLessThanSignKeyword_1_1()); }
	'<'
	{ after(grammarAccess.getRelationalOpAccess().getLessThanSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalOp__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalOp__Group_2__0__Impl
	rule__RelationalOp__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalOp__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalOpAccess().getRelGTAction_2_0()); }
	()
	{ after(grammarAccess.getRelationalOpAccess().getRelGTAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalOp__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalOp__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalOp__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalOpAccess().getGreaterThanSignKeyword_2_1()); }
	'>'
	{ after(grammarAccess.getRelationalOpAccess().getGreaterThanSignKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalOp__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalOp__Group_3__0__Impl
	rule__RelationalOp__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalOp__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalOpAccess().getRelLTEAction_3_0()); }
	()
	{ after(grammarAccess.getRelationalOpAccess().getRelLTEAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalOp__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalOp__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalOp__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalOpAccess().getLessThanSignEqualsSignKeyword_3_1()); }
	'<='
	{ after(grammarAccess.getRelationalOpAccess().getLessThanSignEqualsSignKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalOp__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalOp__Group_4__0__Impl
	rule__RelationalOp__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalOp__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalOpAccess().getRelGTEAction_4_0()); }
	()
	{ after(grammarAccess.getRelationalOpAccess().getRelGTEAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalOp__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalOp__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalOp__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalOpAccess().getGreaterThanSignEqualsSignKeyword_4_1()); }
	'>='
	{ after(grammarAccess.getRelationalOpAccess().getGreaterThanSignEqualsSignKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exp__Group__0__Impl
	rule__Exp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAccess().getFactorParserRuleCall_0()); }
	ruleFactor
	{ after(grammarAccess.getExpAccess().getFactorParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAccess().getGroup_1()); }
	(rule__Exp__Group_1__0)*
	{ after(grammarAccess.getExpAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exp__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exp__Group_1__0__Impl
	rule__Exp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAccess().getAlternatives_1_0()); }
	(rule__Exp__Alternatives_1_0)
	{ after(grammarAccess.getExpAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exp__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAccess().getRightAssignment_1_1()); }
	(rule__Exp__RightAssignment_1_1)
	{ after(grammarAccess.getExpAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exp__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exp__Group_1_0_0__0__Impl
	rule__Exp__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAccess().getPlusSignKeyword_1_0_0_0()); }
	'+'
	{ after(grammarAccess.getExpAccess().getPlusSignKeyword_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exp__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAccess().getAddLeftAction_1_0_0_1()); }
	()
	{ after(grammarAccess.getExpAccess().getAddLeftAction_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exp__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exp__Group_1_0_1__0__Impl
	rule__Exp__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAccess().getHyphenMinusKeyword_1_0_1_0()); }
	'-'
	{ after(grammarAccess.getExpAccess().getHyphenMinusKeyword_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exp__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAccess().getSubLeftAction_1_0_1_1()); }
	()
	{ after(grammarAccess.getExpAccess().getSubLeftAction_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group__0__Impl
	rule__Factor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getPrimitiveParserRuleCall_0()); }
	rulePrimitive
	{ after(grammarAccess.getFactorAccess().getPrimitiveParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getGroup_1()); }
	(rule__Factor__Group_1__0)*
	{ after(grammarAccess.getFactorAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_1__0__Impl
	rule__Factor__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getAlternatives_1_0()); }
	(rule__Factor__Alternatives_1_0)
	{ after(grammarAccess.getFactorAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getRightAssignment_1_1()); }
	(rule__Factor__RightAssignment_1_1)
	{ after(grammarAccess.getFactorAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_1_0_0__0__Impl
	rule__Factor__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getAsteriskKeyword_1_0_0_0()); }
	'*'
	{ after(grammarAccess.getFactorAccess().getAsteriskKeyword_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getMulLeftAction_1_0_0_1()); }
	()
	{ after(grammarAccess.getFactorAccess().getMulLeftAction_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_1_0_1__0__Impl
	rule__Factor__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getSolidusKeyword_1_0_1_0()); }
	'/'
	{ after(grammarAccess.getFactorAccess().getSolidusKeyword_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getDivLeftAction_1_0_1_1()); }
	()
	{ after(grammarAccess.getFactorAccess().getDivLeftAction_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primitive__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_2__0__Impl
	rule__Primitive__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getPrimitiveAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_2__1__Impl
	rule__Primitive__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getExpParserRuleCall_2_1()); }
	ruleExp
	{ after(grammarAccess.getPrimitiveAccess().getExpParserRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getRightParenthesisKeyword_2_2()); }
	')'
	{ after(grammarAccess.getPrimitiveAccess().getRightParenthesisKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Controller__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Controller__Group__0__Impl
	rule__Controller__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Controller__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getControllerAccess().getControllerKeyword_0()); }
	'controller'
	{ after(grammarAccess.getControllerAccess().getControllerKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Controller__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Controller__Group__1__Impl
	rule__Controller__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Controller__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getControllerAccess().getNameAssignment_1()); }
	(rule__Controller__NameAssignment_1)
	{ after(grammarAccess.getControllerAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Controller__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Controller__Group__2__Impl
	rule__Controller__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Controller__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getControllerAccess().getGroup_2()); }
	(rule__Controller__Group_2__0)?
	{ after(grammarAccess.getControllerAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Controller__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Controller__Group__3__Impl
	rule__Controller__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Controller__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getControllerAccess().getUsesKeyword_3()); }
	'uses'
	{ after(grammarAccess.getControllerAccess().getUsesKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Controller__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Controller__Group__4__Impl
	rule__Controller__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Controller__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getControllerAccess().getEntityAssignment_4()); }
	(rule__Controller__EntityAssignment_4)
	{ after(grammarAccess.getControllerAccess().getEntityAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Controller__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Controller__Group__5__Impl
	rule__Controller__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Controller__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getControllerAccess().getLeftCurlyBracketKeyword_5()); }
	'{'
	{ after(grammarAccess.getControllerAccess().getLeftCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Controller__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Controller__Group__6__Impl
	rule__Controller__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Controller__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getControllerAccess().getMethodsAssignment_6()); }
	(rule__Controller__MethodsAssignment_6)*
	{ after(grammarAccess.getControllerAccess().getMethodsAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Controller__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Controller__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Controller__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getControllerAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getControllerAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Controller__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Controller__Group_2__0__Impl
	rule__Controller__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Controller__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getControllerAccess().getColonKeyword_2_0()); }
	':'
	{ after(grammarAccess.getControllerAccess().getColonKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Controller__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Controller__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Controller__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getControllerAccess().getSuperAssignment_2_1()); }
	(rule__Controller__SuperAssignment_2_1)
	{ after(grammarAccess.getControllerAccess().getSuperAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreateMethod__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateMethod__Group__0__Impl
	rule__CreateMethod__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateMethod__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateMethodAccess().getCreateMethodAction_0()); }
	()
	{ after(grammarAccess.getCreateMethodAccess().getCreateMethodAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateMethod__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateMethod__Group__1__Impl
	rule__CreateMethod__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateMethod__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateMethodAccess().getCREATEKeyword_1()); }
	'CREATE'
	{ after(grammarAccess.getCreateMethodAccess().getCREATEKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateMethod__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateMethod__Group__2__Impl
	rule__CreateMethod__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateMethod__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateMethodAccess().getWithEntityAssignment_2()); }
	(rule__CreateMethod__WithEntityAssignment_2)?
	{ after(grammarAccess.getCreateMethodAccess().getWithEntityAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateMethod__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateMethod__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateMethod__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateMethodAccess().getExcludeAssignment_3()); }
	(rule__CreateMethod__ExcludeAssignment_3)?
	{ after(grammarAccess.getCreateMethodAccess().getExcludeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreateMethodWith__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateMethodWith__Group__0__Impl
	rule__CreateMethodWith__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateMethodWith__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateMethodWithAccess().getWithKeyword_0()); }
	'with'
	{ after(grammarAccess.getCreateMethodWithAccess().getWithKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateMethodWith__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateMethodWith__Group__1__Impl
	rule__CreateMethodWith__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateMethodWith__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateMethodWithAccess().getEntityAssignment_1()); }
	(rule__CreateMethodWith__EntityAssignment_1)
	{ after(grammarAccess.getCreateMethodWithAccess().getEntityAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateMethodWith__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateMethodWith__Group__2__Impl
	rule__CreateMethodWith__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateMethodWith__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateMethodWithAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getCreateMethodWithAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateMethodWith__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateMethodWith__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateMethodWith__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateMethodWithAccess().getEntityIdAssignment_3()); }
	(rule__CreateMethodWith__EntityIdAssignment_3)
	{ after(grammarAccess.getCreateMethodWithAccess().getEntityIdAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreateMethodExclude__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateMethodExclude__Group__0__Impl
	rule__CreateMethodExclude__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateMethodExclude__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateMethodExcludeAccess().getExcludeKeyword_0()); }
	'exclude'
	{ after(grammarAccess.getCreateMethodExcludeAccess().getExcludeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateMethodExclude__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateMethodExclude__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateMethodExclude__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateMethodExcludeAccess().getAttributeAssignment_1()); }
	(rule__CreateMethodExclude__AttributeAssignment_1)
	{ after(grammarAccess.getCreateMethodExcludeAccess().getAttributeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GetMethod__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GetMethod__Group__0__Impl
	rule__GetMethod__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GetMethod__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGetMethodAccess().getGETKeyword_0()); }
	'GET'
	{ after(grammarAccess.getGetMethodAccess().getGETKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GetMethod__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GetMethod__Group__1__Impl
	rule__GetMethod__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GetMethod__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGetMethodAccess().getOnKeyword_1()); }
	'on'
	{ after(grammarAccess.getGetMethodAccess().getOnKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GetMethod__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GetMethod__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GetMethod__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGetMethodAccess().getEntityIdAssignment_2()); }
	(rule__GetMethod__EntityIdAssignment_2)
	{ after(grammarAccess.getGetMethodAccess().getEntityIdAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListMethod__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListMethod__Group__0__Impl
	rule__ListMethod__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListMethod__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListMethodAccess().getListMethodAction_0()); }
	()
	{ after(grammarAccess.getListMethodAccess().getListMethodAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListMethod__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListMethod__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListMethod__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListMethodAccess().getLISTKeyword_1()); }
	'LIST'
	{ after(grammarAccess.getListMethodAccess().getLISTKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateMethod__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateMethod__Group__0__Impl
	rule__UpdateMethod__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateMethod__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateMethodAccess().getUPDATEKeyword_0()); }
	'UPDATE'
	{ after(grammarAccess.getUpdateMethodAccess().getUPDATEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateMethod__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateMethod__Group__1__Impl
	rule__UpdateMethod__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateMethod__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateMethodAccess().getAttributesAssignment_1()); }
	(rule__UpdateMethod__AttributesAssignment_1)
	{ after(grammarAccess.getUpdateMethodAccess().getAttributesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateMethod__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateMethod__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateMethod__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateMethodAccess().getGroup_2()); }
	(rule__UpdateMethod__Group_2__0)*
	{ after(grammarAccess.getUpdateMethodAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateMethod__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateMethod__Group_2__0__Impl
	rule__UpdateMethod__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateMethod__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateMethodAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getUpdateMethodAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateMethod__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateMethod__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateMethod__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateMethodAccess().getAttributesAssignment_2_1()); }
	(rule__UpdateMethod__AttributesAssignment_2_1)
	{ after(grammarAccess.getUpdateMethodAccess().getAttributesAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DeleteMethod__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteMethod__Group__0__Impl
	rule__DeleteMethod__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteMethod__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteMethodAccess().getDELETEKeyword_0()); }
	'DELETE'
	{ after(grammarAccess.getDeleteMethodAccess().getDELETEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteMethod__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteMethod__Group__1__Impl
	rule__DeleteMethod__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteMethod__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteMethodAccess().getOnKeyword_1()); }
	'on'
	{ after(grammarAccess.getDeleteMethodAccess().getOnKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteMethod__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteMethod__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteMethod__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteMethodAccess().getEntityIdAssignment_2()); }
	(rule__DeleteMethod__EntityIdAssignment_2)
	{ after(grammarAccess.getDeleteMethodAccess().getEntityIdAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EntityModel__DeclarationsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityModelAccess().getDeclarationsDeclarationParserRuleCall_0()); }
		ruleDeclaration
		{ after(grammarAccess.getEntityModelAccess().getDeclarationsDeclarationParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTypeAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__SuperAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getSuperEntityCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getEntityAccess().getSuperEntityIDTerminalRuleCall_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getEntityAccess().getSuperEntityIDTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getEntityAccess().getSuperEntityCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__AttributesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getAttributesAttributeParserRuleCall_4_0()); }
		ruleAttribute
		{ after(grammarAccess.getEntityAccess().getAttributesAttributeParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getTypeTypeCrossReference_2_0()); }
		(
			{ before(grammarAccess.getAttributeAccess().getTypeTypeIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAttributeAccess().getTypeTypeIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getAttributeAccess().getTypeTypeCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__RequirementAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getRequirementAlternatives_3_0()); }
		(rule__Attribute__RequirementAlternatives_3_0)
		{ after(grammarAccess.getAttributeAccess().getRequirementAlternatives_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeRequirement__LogicAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeRequirementAccess().getLogicLogicExpParserRuleCall_1_0()); }
		ruleLogicExp
		{ after(grammarAccess.getAttributeRequirementAccess().getLogicLogicExpParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalFunction__ExternalFuncAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalFunctionAccess().getExternalFuncIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getExternalFunctionAccess().getExternalFuncIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicExpAccess().getRightConjunctionParserRuleCall_1_2_0()); }
		ruleConjunction
		{ after(grammarAccess.getLogicExpAccess().getRightConjunctionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjunction__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConjunctionAccess().getRightComparisonParserRuleCall_1_2_0()); }
		ruleComparison
		{ after(grammarAccess.getConjunctionAccess().getRightComparisonParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__LeftAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getLeftExpParserRuleCall_0_0()); }
		ruleExp
		{ after(grammarAccess.getComparisonAccess().getLeftExpParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__OpAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getOpRelationalOpParserRuleCall_1_0()); }
		ruleRelationalOp
		{ after(grammarAccess.getComparisonAccess().getOpRelationalOpParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__RightAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getRightExpParserRuleCall_2_0()); }
		ruleExp
		{ after(grammarAccess.getComparisonAccess().getRightExpParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpAccess().getRightFactorParserRuleCall_1_1_0()); }
		ruleFactor
		{ after(grammarAccess.getExpAccess().getRightFactorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactorAccess().getRightPrimitiveParserRuleCall_1_1_0()); }
		rulePrimitive
		{ after(grammarAccess.getFactorAccess().getRightPrimitiveParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__VarNameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNameAccess().getVarNameAttributeCrossReference_0()); }
		(
			{ before(grammarAccess.getNameAccess().getVarNameAttributeIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getNameAccess().getVarNameAttributeIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getNameAccess().getVarNameAttributeCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntExp__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntExpAccess().getValueINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getIntExpAccess().getValueINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Controller__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getControllerAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getControllerAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Controller__SuperAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getControllerAccess().getSuperControllerCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getControllerAccess().getSuperControllerIDTerminalRuleCall_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getControllerAccess().getSuperControllerIDTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getControllerAccess().getSuperControllerCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Controller__EntityAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getControllerAccess().getEntityEntityCrossReference_4_0()); }
		(
			{ before(grammarAccess.getControllerAccess().getEntityEntityIDTerminalRuleCall_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getControllerAccess().getEntityEntityIDTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getControllerAccess().getEntityEntityCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Controller__MethodsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getControllerAccess().getMethodsMethodDefParserRuleCall_6_0()); }
		ruleMethodDef
		{ after(grammarAccess.getControllerAccess().getMethodsMethodDefParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateMethod__WithEntityAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateMethodAccess().getWithEntityCreateMethodWithParserRuleCall_2_0()); }
		ruleCreateMethodWith
		{ after(grammarAccess.getCreateMethodAccess().getWithEntityCreateMethodWithParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateMethod__ExcludeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateMethodAccess().getExcludeCreateMethodExcludeParserRuleCall_3_0()); }
		ruleCreateMethodExclude
		{ after(grammarAccess.getCreateMethodAccess().getExcludeCreateMethodExcludeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateMethodWith__EntityAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateMethodWithAccess().getEntityEntityCrossReference_1_0()); }
		(
			{ before(grammarAccess.getCreateMethodWithAccess().getEntityEntityIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCreateMethodWithAccess().getEntityEntityIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getCreateMethodWithAccess().getEntityEntityCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateMethodWith__EntityIdAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateMethodWithAccess().getEntityIdAttributeCrossReference_3_0()); }
		(
			{ before(grammarAccess.getCreateMethodWithAccess().getEntityIdAttributeIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCreateMethodWithAccess().getEntityIdAttributeIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getCreateMethodWithAccess().getEntityIdAttributeCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateMethodExclude__AttributeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateMethodExcludeAccess().getAttributeAttributeCrossReference_1_0()); }
		(
			{ before(grammarAccess.getCreateMethodExcludeAccess().getAttributeAttributeIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCreateMethodExcludeAccess().getAttributeAttributeIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getCreateMethodExcludeAccess().getAttributeAttributeCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GetMethod__EntityIdAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGetMethodAccess().getEntityIdAttributeCrossReference_2_0()); }
		(
			{ before(grammarAccess.getGetMethodAccess().getEntityIdAttributeIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getGetMethodAccess().getEntityIdAttributeIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getGetMethodAccess().getEntityIdAttributeCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateMethod__AttributesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateMethodAccess().getAttributesAttributeCrossReference_1_0()); }
		(
			{ before(grammarAccess.getUpdateMethodAccess().getAttributesAttributeIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getUpdateMethodAccess().getAttributesAttributeIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getUpdateMethodAccess().getAttributesAttributeCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateMethod__AttributesAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateMethodAccess().getAttributesAttributeCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getUpdateMethodAccess().getAttributesAttributeIDTerminalRuleCall_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getUpdateMethodAccess().getAttributesAttributeIDTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getUpdateMethodAccess().getAttributesAttributeCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteMethod__EntityIdAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeleteMethodAccess().getEntityIdAttributeCrossReference_2_0()); }
		(
			{ before(grammarAccess.getDeleteMethodAccess().getEntityIdAttributeIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getDeleteMethodAccess().getEntityIdAttributeIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getDeleteMethodAccess().getEntityIdAttributeCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
